@page "/upsdisplay"

@using System.Net.Http
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Threading.Tasks
@inject HttpClient HttpClient
@inject NavigationManager Nav
@using Microsoft.Extensions.Http
@inject IHttpClientFactory httpClientFactory
@inject ApiService ApiService
@using Newtonsoft.Json.Linq

<MudText Typo="Typo.h6"> UPSs </MudText>


<MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>  <!-- Home->UPSs -->

@* Refresh ups display *@
<MudIconButton Icon="@Icons.Material.Filled.Refresh" aria-label="refresh" OnClick="GetUPS"></MudIconButton>

@if (data != null)
{
    <MudContainer>
        <MudGrid class = "display-grid">      
            @foreach (var ups in data)
            {   
                // UPS card
                <MudItem Class="display-card">
                    <MudCardContent>
                        <div>
                            <button @onclick="@(() => Nav.NavigateTo($"upsdisplay/{ups.Name}/{ups.GroupID}"))">
                                <div>
                                    <MudText Typo="Typo.h6"> @ups.Name </MudText>
                                    <MudText> GroupID: @ups.GroupID </MudText>
                                </div>
                            </button>

                        </div>
                    </MudCardContent>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}


@code {
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>{   
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("UPSs", href: null, disabled: true)
    };

    private UPS[]? data;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetUPS();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    private async Task GetUPS()
    {

        string[] parameters = null;

        /**** Send ups GET request to Zabbix API ****
         * Send: --------
         * Get: UPS list
         ********************************************/
        var apiResponse = await ApiService.GetApiResponse("ups", parameters).ConfigureAwait(false);     // Get all UPSs from Zabbix Server
        JObject json = JObject.Parse(apiResponse);

        // Deserialize 
        data = json["result"].ToObject<UPS[]>();    // JSON to array of UPS objects

        await InvokeAsync(StateHasChanged);     // Allow for components to re-render
    }

    public class UPS
    {
        public string? GroupID { get; set; }
        public string? Name { get; set; }

    }
}